--- anki-2.1.49/cargo/BUILD.reqwest.native.bazel
+++ anki-2.1.49_arm/cargo/BUILD.reqwest.native.bazel
@@ -90,6 +90,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/BUILD.reqwest.rustls.bazel
+++ anki-2.1.49_arm/cargo/BUILD.reqwest.rustls.bazel
@@ -93,6 +93,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/remote/BUILD.ahash-0.7.4.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.ahash-0.7.4.bazel
@@ -62,6 +62,7 @@ cargo_build_script(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
@@ -103,6 +104,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/remote/BUILD.atty-0.2.14.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.atty-0.2.14.bazel
@@ -58,6 +58,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.coarsetime-0.1.19.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.coarsetime-0.1.19.bazel
@@ -57,6 +57,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/remote/BUILD.dirs-sys-0.3.6.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.dirs-sys-0.3.6.bazel
@@ -56,6 +56,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.getrandom-0.1.16.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.getrandom-0.1.16.bazel
@@ -62,6 +62,7 @@ cargo_build_script(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
@@ -102,6 +103,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.getrandom-0.2.3.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.getrandom-0.2.3.bazel
@@ -60,6 +60,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.hyper-0.14.9.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.hyper-0.14.9.bazel
@@ -123,6 +123,7 @@ rust_library(
         # cfg(any(target_os = "linux", target_os = "macos"))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
--- anki-2.1.49/cargo/remote/BUILD.mio-0.7.13.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.mio-0.7.13.bazel
@@ -69,6 +69,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.native-tls-0.2.7.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.native-tls-0.2.7.bazel
@@ -70,6 +70,7 @@ cargo_build_script(
         # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
             "@raze__openssl_sys__0_9_65//:openssl_sys",
@@ -129,6 +130,7 @@ rust_library(
         # cfg(not(any(target_os = "windows", target_os = "macos", target_os = "ios")))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
             "@raze__log__0_4_14//:log",
--- anki-2.1.49/cargo/remote/BUILD.num-format-0.4.0.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.num-format-0.4.0.bazel
@@ -60,6 +60,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.parking_lot_core-0.8.3.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.parking_lot_core-0.8.3.bazel
@@ -59,6 +59,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.rand-0.7.3.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.rand-0.7.3.bazel
@@ -81,6 +81,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.rand-0.8.4.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.rand-0.8.4.bazel
@@ -67,6 +67,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.reqwest-0.11.3.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.reqwest-0.11.3.bazel
@@ -99,6 +99,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/remote/BUILD.reqwest-0.11.4.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.reqwest-0.11.4.bazel
@@ -80,6 +80,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/remote/BUILD.ring-0.16.20.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.ring-0.16.20.bazel
@@ -66,6 +66,7 @@ cargo_build_script(
         # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
@@ -77,6 +78,7 @@ cargo_build_script(
         # cfg(any(target_os = "android", target_os = "linux"))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
         ],
@@ -86,6 +88,7 @@ cargo_build_script(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
@@ -135,6 +138,7 @@ rust_library(
         # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
@@ -147,6 +151,7 @@ rust_library(
         # cfg(any(target_os = "android", target_os = "linux"))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
             "@raze__libc__0_2_97//:libc",
@@ -158,6 +163,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
--- anki-2.1.49/cargo/remote/BUILD.rustls-native-certs-0.5.0.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.rustls-native-certs-0.5.0.bazel
@@ -61,6 +61,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
--- anki-2.1.49/cargo/remote/BUILD.socket2-0.4.0.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.socket2-0.4.0.bazel
@@ -56,6 +56,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.tempfile-3.2.0.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.tempfile-3.2.0.bazel
@@ -59,6 +59,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.tokio-1.7.1.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.tokio-1.7.1.bazel
@@ -78,6 +78,7 @@ cargo_build_script(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
@@ -145,6 +146,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
--- anki-2.1.49/cargo/remote/BUILD.tokio-native-tls-0.3.0.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.tokio-native-tls-0.3.0.bazel
@@ -61,6 +61,7 @@ rust_library(
         # cfg(all(not(target_os = "macos"), not(windows), not(target_os = "ios")))
         (
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
         ): [
         ],
--- anki-2.1.49/cargo/remote/BUILD.utime-0.3.1.bazel
+++ anki-2.1.49_arm/cargo/remote/BUILD.utime-0.3.1.bazel
@@ -56,6 +56,7 @@ rust_library(
         (
             "@rules_rust//rust/platform:aarch64-apple-ios",
             "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
+            "@rules_rust//rust/platform:arm-unknown-linux-gnueabihf",
             "@rules_rust//rust/platform:x86_64-apple-darwin",
             "@rules_rust//rust/platform:x86_64-apple-ios",
             "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
